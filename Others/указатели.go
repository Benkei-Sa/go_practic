/*
	В Go мы объявляем указатель с помощью символа *:
	var p *int

	оператор &, который возвращает адрес переменной в памяти.
	Например:
	x := 42
	p := &x

Мы можем передавать указатели в качестве параметров функции.
Давайте рассмотрим пример:

package main

import "fmt"

func change(val int) {
  val = 8
}
func change_ptr(ptr *int) {
  *ptr = 8
}

func main() {
  x := 42

  change(x)
  fmt.Println(x) // выведет 42

  change_ptr(&x)
  fmt.Println(x) // выведет 8
}
Функция change() принимает целочисленный аргумент и изменяет его значение.
Функция change_ptr() делает то же самое, используя указатель.

Выполнив код, вы увидите, что функция change() не изменила значение нашей
переменной x, потому что аргумент является просто копией ее значения, в то время
как функция change_ptr() изменила фактическое значение x,
потому что в качестве аргумента использовала адрес в памяти.

*/

метод drive
указатель c
структура Car
аргумент speed
